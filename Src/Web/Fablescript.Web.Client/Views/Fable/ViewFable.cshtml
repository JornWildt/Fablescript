@model FableModel

@{
  ViewData["Title"] = Model.FableId;
}

<div class="fable-app"
     id="fable-app"
     @@vue:mounted="initializeUI">
  <div class="fable-dialogue-panel">
    <div class="fable-output-area">
      <div v-html="output" class="fable-output-content" id="fable_output_element"></div>
    </div>

    <div class="fable-input-area">
      <textarea v-model="command" v-on:keydown="inputKeydownHandler" :disabled="isLoading" id="fable_input_textarea"></textarea>
      <button v-on:click="sendUserCommand" :disabled="isLoading">Send</button>
    </div>
  </div>
</div>

<script type="module">
  import { createApp } from '/lib/petite-vue/petite-vue.es.js'
  import { marked } from '/lib/marked/marked.esm.js'

  createApp({
    command: "",
    output: "Loading ...",
    isLoading: false,

    async initializeUI() {
      const response = await this.sendCommand({ command: "###DESCRIBE", fableId: "@Model.FableId" });

      this.output = "<div class='fade-in'>" + marked.parse(response.message) + "</div>";
      this.command = '';
      document.getElementById('fable_input_textarea').focus();      
    },


    inputKeydownHandler(e) {
      if (e.key === "Enter" && !e.shiftKey) {
        e.preventDefault();
        this.sendUserCommand();
      }
    },


    async sendUserCommand() {
      const input = this.command.trim();

      if (input) {
        this.isLoading = true;

        const response = await this.sendCommand({ command: input, fableId: "@Model.FableId" });

        this.output = "<div class='fade-in'>" + marked.parse(response.message) + "</div>";
        this.command = '';
        this.isLoading = false;

        setTimeout(() => {
          document.getElementById('fable_input_textarea').focus();
        }, 0);
      }
    },


    async sendCommand(cmd) {
      try {
        const res = await fetch('/api/fable/command', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: "include",
          body: JSON.stringify(cmd)
        })

        if (!res.ok)
          throw new Error('Server error')

        const data = await res.json();
        return data;
      } catch (err) {
        window.alert(err);
      }
    }
  }).mount("#fable-app")
</script>
